See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED
API:          PASSED

Spotbugs:     FAILED (1 warning)
PMD:          FAILED (3 warnings)
Checkstyle:   FAILED (2 errors, 7 warnings)

Correctness:  No tests available for autograding.
Memory:       No tests available for autograding.
Timing:       No tests available for autograding.

Aggregate score: 10.00%
[Compilation: 5%, API: 5%, Spotbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
4.7K Aug 14 04:38 Board.java
1005 Aug 14 04:38 Solver.java


********************************************************************************
*  COMPILING                                                                    
********************************************************************************


% javac Board.java
*-----------------------------------------------------------

% javac Solver.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
Board:

Solver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS                                       
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------
H C EQ_ALWAYS_TRUE Eq: The 'equals()' method always returns true.  At Board.java:[line 107]
Warnings generated: 1


================================================================


% pmd .
*-----------------------------------------------------------
Board.java:19: The private instance (or static) variable 'hammingScore' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Board.java:20: The private instance (or static) variable 'manhattanScore' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Solver.java:17: Avoid unused parameter variables, such as 'initial'. [UnusedFormalParameter]
PMD ends with 3 warnings.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] Board.java:138:17: The local variable 'hamming_score' must start with a lowercase letter and use camelCase. [LocalVariableName]
[WARN] Board.java:139:17: The local variable 'manhatan_score' must start with a lowercase letter and use camelCase. [LocalVariableName]
[WARN] Board.java:140:15: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] Board.java:142:15: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] Board.java:147:21: '(' is preceded with whitespace. [MethodParamPad]
Checkstyle ends with 0 errors and 5 warnings.

% custom checkstyle checks for Board.java
*-----------------------------------------------------------

% custom checkstyle checks for Solver.java
*-----------------------------------------------------------
[ERROR] Solver.java:1: You must call 'manhattan()' in this program. [MethodCallCount]
[ERROR] Solver.java:1: You must construct one or more 'MinPQ' objects in this program. [MethodCallCount]
[WARN] Solver.java:1: You should use 'isGoal()' to check whether a board is the goal board. [MethodCallCount]
[WARN] Solver.java:1: You will need to call the 'equals()' method in Board in order to implement the critical optimization; do not use the '==' operator to compare Board objects. [Performance]
Checkstyle ends with 2 errors and 2 warnings.


================================================================


ABORTING: you must fix any Checkstyle errors (not warnings).